# cd
alias ..='cd ..'
alias ...='cd ../..'

# git-shortcuts
alias git="LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 git"
alias ga="git add"
alias g.="git add . && git status"
alias gb='git branch'
alias gc='git commit'
alias gco='git checkout'
alias gd="git diff"
alias gdc="git diff --cached"
alias gl="git log --pretty=oneline"
alias gp='git push'
alias gpl="git pull"
alias gs="git status"
alias gst="git stash"
alias feature="git checkout -b"

function gam { git commit -a -m "$1"; }
function gm { git commit -m "$1"; }
function gp {
    git status 2> /dev/null | grep 'On branch master' > /dev/null && git push
}
function merge_with_master {
    branch_name=$(git branch | grep "*" | sed "s/* //")
    test $branch_name = "master" &&\
        echo "Already on master, checkout your feature branch" && return
    git checkout master
    grep "origin" .git/config > /dev/null && git pull
    git merge --ff-only $branch_name && git branch -d $branch_name \
        && echo "You can now 'git push' your code" && return || \
        git checkout $branch_name
    echo "Your are behind master, a clean Merge is not possible!"
    echo -n "Should I rebase it with master and try it again? (y/n) "
    read ANSWER
    [[ -n `echo $ANSWER | grep '^[jyJY]'` ]] && \
        git rebase master && merge_with_master
}

# aliases
alias sctl="systemctl"
alias vi="vim"
alias dot="cd ~/.dotfiles"
alias vim-bundleinstall="vim +BundleInstall +qall"

# functions
function isomount { sudo mount -o loop -t iso9660 "$1" /mnt;  }
function lsl { ls -lisa "$@" }
function pr { cd ~/projects/"$1" }
function wo { cd ~/work/"$1" }
function httpserv {
    if [[ -z $1 ]]; then
        1="50500"
    fi
    python -m SimpleHTTPServer $1
}
function mcd() { mkdir -p $1 && cd $1 }
function cdf() { cd *$1*/ }


# named directories
hash -d proj=~/projects
hash -d work=~/work
hash -d down=~/Downloads
